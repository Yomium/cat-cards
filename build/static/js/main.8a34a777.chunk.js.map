{"version":3,"sources":["actions/index.js","components/Cards.jsx","components/App.jsx","reducers/index.js","index.jsx"],"names":["toggleCardState","createAction","toggleUIHover","fetchCardsSuccess","fetchCardsRequest","fetchCardsFailure","actionCreators","actions","Cards","id","props","renderLink","type","state","className","onClick","renderCard","card","cardsUIState","currentState","descriptionClasses","cn","borders","weightClasses","weight","key","onMouseLeave","selected","selectedHovered","default","defaultHovered","disabled","description","join","cards","this","length","map","React","Component","connect","byId","allIds","App","handleActions","payload","_","keyBy","combineReducers","ext","window","__REDUX_DEVTOOLS_EXTENSION__","devtoolMiddleware","store","createStore","reducers","compose","applyMiddleware","thunk","dispatch","e","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a34a777.chunk.js","sourcesContent":["import { createAction } from 'redux-actions';\n\nexport const toggleCardState = createAction('CARD_STATE_TOGGLE');\nexport const toggleUIHover = createAction('CARD_UI_HOVER_TOGGLE');\n\nexport const fetchCardsSuccess = createAction('CARDS_FETCH_SUCCESS');\nexport const fetchCardsRequest = createAction('CARDS_FETCH_REQUEST');\nexport const fetchCardsFailure = createAction('CARDS_FETCH_FAILURE');\n\nexport const fetchCards = () => (dispatch) => {\n  const cards = [\n      {id: 1, type: \"с фуа-гра\", description:[\"10 порций\", \"мышь в подарок\"], weight:\"0.5\", state:\"default\",},\n      {id: 2, type: \"с рыбой\", description: [\"40 порций\", \"2 мыши в подарок\"], weight:\"2\", state: \"default\",},\n      {id: 3, type: \"с курой\", description: [\"100 порций\", \"5 мышей в подарок\", \"заказчик доволен\"], weight: \"5\", state: \"disabled\",},\n    ];\n\n  const cardsUIState = [\n    {id: 1, state: 'default'},\n    {id: 2, state: 'default'},\n    {id: 3, state: 'disabled'},\n  ];\n\n  dispatch(fetchCardsRequest());\n  try {\n    dispatch(fetchCardsSuccess({ cards, cardsUIState }));\n  } catch (e) {\n    dispatch(fetchCardsFailure());\n    throw e;\n  }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/index.js';\nimport cn from 'classnames';\n\nconst mapStateToProps = (state) => {\n  const { cards: { byId, allIds }, cardsUIState } = state;\n  const cards = allIds.map((id) => byId[id])\n  return { cards, cardsUIState };\n}\n\nconst actionCreators = {\n  toggleCardState: actions.toggleCardState,\n  toggleUIHover: actions.toggleUIHover,\n}\n\nclass Cards extends React.Component {\n  toggleCardState = (id) => () => {\n    const { toggleCardState } = this.props;\n    toggleCardState({ id });\n  }\n\n  toggleUIHover = (id) => () => {\n    const { toggleUIHover } = this.props;\n    toggleUIHover({ id });\n  }\n\n  renderLink = (id, type, state) => {\n    const typeToLink = {\n      'с фуа-гра': 'Печень утки разварная с артишоками.',\n      'с рыбой': 'Головы щучьи с чесноком да свежайшая сёмгушка.',\n      'с курой' : 'Филе из цыплят с трюфелями в бульоне.',\n    };\n\n    switch(state) {\n      case 'default': {\n        return <p className=\"link\">Чего сидишь? Порадуй котэ, <button className=\"button\" onClick={this.toggleCardState(id)}>купи.</button></p>;\n      }\n      case 'selected': {\n        return <p className=\"link\">{typeToLink[type]}</p>\n      }\n      case 'disabled': {\n        return <p className=\"link disabled\">Печалька, {type} закончился</p>\n      }\n      default: {\n        return null;\n      }\n    }\n  }\n\n  renderCard = (card) => {\n    const { cardsUIState } = this.props;\n\n    const stateToTitle = {\n      selected: 'Котэ не одобряет?',\n      selectedHovered: 'Котэ не одобряет?',\n      default: 'Сказочное заморское яство',\n      defaultHovered: 'Сказочное заморское яство',\n      disabled: 'Сказочное заморское яство',\n    };\n\n    const currentState = cardsUIState[card.id].state;\n\n    const descriptionClasses = cn({\n      card: true,\n      borders: true,\n      [currentState]: true,\n    });\n\n    const weightClasses = cn({\n      weight: true,\n      [currentState]: true,\n    })\n\n    return (\n      <div key={card.id} className=\"option\">\n        <div className={descriptionClasses} onClick={this.toggleCardState(card.id)} onMouseLeave={this.toggleUIHover(card.id)}>\n          <div className=\"description\">\n            <p className=\"note\">{stateToTitle[cardsUIState[card.id].state]}</p>\n            <div className=\"title\">\n              <p>Нямушка</p>\n              <span>{card.type}</span>\n            </div>\n            <p className=\"quantity\">{card.description.join('\\n')}</p>\n          </div>\n          <div className=\"image\">\n            <div className={weightClasses}>\n              <p>{card.weight}<span>кг</span></p>\n            </div>\n          </div>\n        </div>\n        {this.renderLink(card.id, card.type, card.state)}\n      </div>);\n  }\n\n  render() {\n    const { cards } = this.props;\n\n    if (cards.length === 0) {\n      return null;\n    }\n\n    return cards.map(this.renderCard);\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(Cards);\n","import React from 'react';\nimport Cards from './Cards.jsx';\n\nconst App = () => (\n  <div className=\"section\">\n    <Cards />\n  </div>\n);\n\nexport default App;\n","import _ from 'lodash';\nimport { combineReducers } from 'redux';\nimport { handleActions } from 'redux-actions';\nimport * as actions from '../actions/index.js';\n\nconst cards = handleActions({\n  [actions.fetchCardsSuccess](state, { payload }) {\n    return {\n      byId: _.keyBy(payload.cards, 'id'),\n      allIds: payload.cards.map((card) => card.id),\n    };\n  },\n  [actions.toggleCardState](state, { payload: { id } }) {\n    const card = state.byId[id];\n    const mapping = {\n      default: 'selected',\n      selected: 'default',\n      disabled: 'disabled',\n    }\n    \n    return {\n      ...state,\n      byId: { ...state.byId, [card.id]: { ...card, state: mapping[card.state] } },\n    }\n  }\n}, { byId: {}, allIds: [] });\n\nconst cardsUIState = handleActions({\n  [actions.fetchCardsSuccess](state, { payload }) {\n    return _.keyBy(payload.cardsUIState, 'id');\n  },\n  [actions.toggleCardState](state, { payload: { id } }) {\n    const currentState = state[id].state;\n    const mapping = {\n      default: 'selected',\n      selected: 'default',\n      disabled: 'disabled',\n      defaultHovered: 'selected',\n      selectedHovered: 'default',\n    }\n\n    return {\n      ...state,\n      [id]: { ...state[id], state: mapping[currentState] },\n    };\n  },\n  [actions.toggleUIHover](state, { payload: { id } }) {\n    const currentState = state[id].state;\n    const mapping = {\n      default: 'defaultHovered',\n      selected: 'selectedHovered',\n      defaultHovered: 'default',\n      selectedHovered: 'selected',\n      disabled: 'disabled',\n    }\n\n    return {\n      ...state,\n      [id]: { ...state[id], state: mapping[currentState] },\n    };\n  }\n}, {});\n\nexport default combineReducers({\n  cards,\n  cardsUIState,\n});\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport './css/styles.css';\nimport App from './components/App.jsx';\nimport reducers from './reducers/index.js';\nimport { fetchCards } from './actions/index.js';\nimport thunk from 'redux-thunk';\n\nconst ext = window.__REDUX_DEVTOOLS_EXTENSION__;\nconst devtoolMiddleware = ext && ext();\nconst store = createStore(\n\treducers,\n\tcompose(\n\t\tapplyMiddleware(thunk),\n\t\tdevtoolMiddleware,\n\t),\n);\n\nstore.dispatch(fetchCards());\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}