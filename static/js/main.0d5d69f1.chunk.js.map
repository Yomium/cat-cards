{"version":3,"sources":["actions/index.js","components/Card.jsx","components/Cards.jsx","components/App.jsx","reducers/index.js","index.jsx"],"names":["toggleCardState","createAction","toggleUIHover","fetchCardsSuccess","fetchCardsRequest","fetchCardsFailure","actionCreators","actions","Card","id","props","renderLink","type","state","className","onClick","this","card","currentUIState","cardsUIState","descriptionClasses","cn","borders","weightClasses","weight","onMouseLeave","selected","default","disabled","description","join","React","Component","connect","Cards","renderCard","key","cards","length","map","byId","allIds","App","handleActions","payload","_","keyBy","currentState","defaultHovered","selectedHovered","combineReducers","ext","window","__REDUX_DEVTOOLS_EXTENSION__","devtoolMiddleware","store","createStore","reducers","compose","applyMiddleware","thunk","dispatch","e","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d5d69f1.chunk.js","sourcesContent":["import { createAction } from 'redux-actions';\n\nexport const toggleCardState = createAction('CARD_STATE_TOGGLE');\nexport const toggleUIHover = createAction('CARD_UI_HOVER_TOGGLE');\n\nexport const fetchCardsSuccess = createAction('CARDS_FETCH_SUCCESS');\nexport const fetchCardsRequest = createAction('CARDS_FETCH_REQUEST');\nexport const fetchCardsFailure = createAction('CARDS_FETCH_FAILURE');\n\nexport const fetchCards = () => (dispatch) => {\n  const cards = [\n      {id: 1, type: \"с фуа-гра\", description:[\"10 порций\", \"мышь в подарок\"], weight:\"0.5\", state:\"default\",},\n      {id: 2, type: \"с рыбой\", description: [\"40 порций\", \"2 мыши в подарок\"], weight:\"2\", state: \"default\",},\n      {id: 3, type: \"с курой\", description: [\"100 порций\", \"5 мышей в подарок\", \"заказчик доволен\"], weight: \"5\", state: \"disabled\",},\n    ];\n\n  const cardsUIState = [\n    {id: 1, state: 'default'},\n    {id: 2, state: 'default'},\n    {id: 3, state: 'disabled'},\n  ];\n\n  dispatch(fetchCardsRequest());\n  try {\n    dispatch(fetchCardsSuccess({ cards, cardsUIState }));\n  } catch (e) {\n    dispatch(fetchCardsFailure());\n    throw e;\n  }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/index.js';\nimport cn from 'classnames';\n\nconst mapStateToProps = (state) => {\n  const { cardsUIState } = state;\n  return { cardsUIState };\n}\n\nconst actionCreators = {\n  toggleCardState: actions.toggleCardState,\n  toggleUIHover: actions.toggleUIHover,\n}\n\nclass Card extends React.Component {\n  toggleCardState = (id) => () => {\n    const { toggleCardState } = this.props;\n    toggleCardState({ id });\n  }\n\n  toggleUIHover = (id) => () => {\n    const { toggleUIHover } = this.props;\n    toggleUIHover({ id });\n  }\n\n  renderLink = (id, type, state) => {\n    const typeToLink = {\n      'с фуа-гра': 'Печень утки разварная с артишоками.',\n      'с рыбой': 'Головы щучьи с чесноком да свежайшая сёмгушка.',\n      'с курой' : 'Филе из цыплят с трюфелями в бульоне.',\n    };\n\n    switch(state) {\n      case 'default': {\n        return <p className=\"link\">Чего сидишь? Порадуй котэ, <button className=\"button\" onClick={this.toggleCardState(id)}>купи.</button></p>;\n      }\n      case 'selected': {\n        return <p className=\"link\">{typeToLink[type]}</p>\n      }\n      case 'disabled': {\n        return <p className=\"link disabled\">Печалька, {type} закончился</p>\n      }\n      default: {\n        return null;\n      }\n    }\n  };\n\n  render() {\n    const { card, cardsUIState } = this.props;\n\n    const stateToTitle = {\n      selected: 'Котэ не одобряет?',\n      default: 'Сказочное заморское яство',\n      disabled: 'Сказочное заморское яство',\n    };\n\n    const currentUIState = cardsUIState[card.id].state;\n\n    const descriptionClasses = cn({\n      card: true,\n      borders: true,\n      [currentUIState]: true,\n    });\n\n    const weightClasses = cn({\n      weight: true,\n      [currentUIState]: true,\n    })\n\n    return (\n      <div className=\"option\">\n        <div className={descriptionClasses} onClick={this.toggleCardState(card.id)} onMouseLeave={this.toggleUIHover(card.id)}>\n          <div className=\"description\">\n            <p className=\"note\">{stateToTitle[card.state]}</p>\n            <div className=\"title\">\n              <p>Нямушка</p>\n              <span>{card.type}</span>\n            </div>\n            <p className=\"quantity\">{card.description.join('\\n')}</p>\n          </div>\n          <div className=\"image\">\n            <div className={weightClasses}>\n              <p>{card.weight}<span>кг</span></p>\n            </div>\n          </div>\n        </div>\n        {this.renderLink(card.id, card.type, card.state)}\n      </div>);\n  }\n}\n\nexport default connect(mapStateToProps, actionCreators)(Card);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Card from './Card.jsx';\n\n\nconst mapStateToProps = (state) => {\n  const { cards: { byId, allIds } } = state;\n  const cards = allIds.map((id) => byId[id])\n  return { cards };\n}\n\n\nclass Cards extends React.Component {\n  renderCard = (card) => {\n    return (\n      <Card key={card.id} card={card}/>\n    );\n  };\n\n  render() {\n    const { cards } = this.props;\n\n    if (cards.length === 0) {\n      return null;\n    }\n\n    return cards.map(this.renderCard);\n  };\n}\n\nexport default connect(mapStateToProps)(Cards);\n","import React from 'react';\nimport Cards from './Cards.jsx';\n\nconst App = () => (\n  <div className=\"section\">\n    <Cards />\n  </div>\n);\n\nexport default App;\n","import _ from 'lodash';\nimport { combineReducers } from 'redux';\nimport { handleActions } from 'redux-actions';\nimport * as actions from '../actions/index.js';\n\nconst cards = handleActions({\n  [actions.fetchCardsSuccess](state, { payload }) {\n    return {\n      byId: _.keyBy(payload.cards, 'id'),\n      allIds: payload.cards.map((card) => card.id),\n    };\n  },\n  [actions.toggleCardState](state, { payload: { id } }) {\n    const card = state.byId[id];\n    const mapping = {\n      default: 'selected',\n      selected: 'default',\n      disabled: 'disabled',\n    }\n\n    return {\n      ...state,\n      byId: { ...state.byId, [card.id]: { ...card, state: mapping[card.state] } },\n    }\n  }\n}, { byId: {}, allIds: [] });\n\nconst cardsUIState = handleActions({\n  [actions.fetchCardsSuccess](state, { payload }) {\n    return _.keyBy(payload.cardsUIState, 'id');\n  },\n  [actions.toggleCardState](state, { payload: { id } }) {\n    const currentState = state[id].state;\n    const mapping = {\n      default: 'selected',\n      selected: 'default',\n      disabled: 'disabled',\n      defaultHovered: 'selected',\n      selectedHovered: 'default',\n    }\n\n    return {\n      ...state,\n      [id]: { ...state[id], state: mapping[currentState] },\n    };\n  },\n  [actions.toggleUIHover](state, { payload: { id } }) {\n    const currentState = state[id].state;\n    const mapping = {\n      default: 'defaultHovered',\n      selected: 'selectedHovered',\n      defaultHovered: 'default',\n      selectedHovered: 'selected',\n      disabled: 'disabled',\n    }\n\n    return {\n      ...state,\n      [id]: { ...state[id], state: mapping[currentState] },\n    };\n  }\n}, {});\n\nexport default combineReducers({\n  cards,\n  cardsUIState,\n});\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport './css/styles.css';\nimport App from './components/App.jsx';\nimport reducers from './reducers/index.js';\nimport { fetchCards } from './actions/index.js';\nimport thunk from 'redux-thunk';\n\nconst ext = window.__REDUX_DEVTOOLS_EXTENSION__;\nconst devtoolMiddleware = ext && ext();\nconst store = createStore(\n\treducers,\n\tcompose(\n\t\tapplyMiddleware(thunk),\n\t\tdevtoolMiddleware,\n\t),\n);\n\nstore.dispatch(fetchCards());\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}